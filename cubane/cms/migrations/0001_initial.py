# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-15 14:39
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('media', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='Created on')),
                ('updated_on', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='Updated on')),
                ('deleted_on', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='Deleted on')),
                ('_meta_title', models.CharField(blank=True, db_column='meta_title', help_text='The title of the page that is displayed in google or other search engines.', max_length=255, null=True, verbose_name='Meta Title')),
                ('_meta_description', models.CharField(blank=True, db_column='meta_description', help_text='A short description that is displayed underneath the meta title in google or other search engines.', max_length=255, null=True, verbose_name='Meta Description')),
                ('_meta_keywords', models.CharField(blank=True, db_column='meta_keywords', help_text='A list of keywords that are significant for the content of this page.', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('legacy_url', models.CharField(blank=True, db_index=True, help_text='Legacy document path or full URL. Provide the legacy URL to this page; how it was used to be named on the old site.', max_length=255, null=True, verbose_name='Legacy Url')),
                ('_data', models.TextField(blank=True, db_column='data', help_text='Edit the content of your webpage.', null=True, verbose_name='Content')),
                ('_excerpt', models.TextField(blank=True, db_column='excerpt', help_text='Provide a brief summary for this entity which is usually presented alongside an image for this entity.', null=True, verbose_name='Excerpt')),
                ('_nav', models.CharField(blank=True, db_column='nav', max_length=255, null=True, verbose_name='Navigation')),
                ('title', models.CharField(db_index=True, help_text='The title of the page that is displayed on the website.', max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(help_text='The name of the html file for the page as part of the pages address.', max_length=120, verbose_name='Slug')),
                ('template', models.CharField(choices=[('app/page.html', 'Page'), ('app/mail/enquiry_visitor.html', 'Enquiry Email')], default='app/page.html', help_text='The name of the template that is used to render this page.', max_length=255, verbose_name='Template')),
                ('disabled', models.BooleanField(db_index=True, default=False, help_text='A disabled web page is not visible to visitors nor to search engines. A disabled web page will also not show up in the navigation section(s) of your website.', verbose_name='Disabled')),
                ('sitemap', models.BooleanField(default=True, help_text='This page is listed within the sitemap.xml file for this website.', verbose_name='Sitemap Listed')),
                ('seq', models.IntegerField(db_index=True, default=0, editable=False, help_text='The sequence number determines the order in which pages are presented, for example within the navigation section(s) of your website.', verbose_name='Sequence')),
                ('nav_updated_on', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='Navigation-relevant data updated timestamp')),
                ('entity_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='Child Pages (type)')),
                ('navigation_title', models.CharField(blank=True, help_text='Override the regular title that is used within the navigation of the website.', max_length=255, null=True, verbose_name='Navigation Title')),
                ('identifier', models.CharField(blank=True, db_index=True, help_text='The unique identifier allows us to refer to this page independently of its title or slug.', max_length=255, null=True, verbose_name='Unique Identifier')),
                ('is_homepage', models.BooleanField(default=False, editable=False, verbose_name='Is Homepage')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('deleted_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('image', models.ForeignKey(blank=True, help_text='Select an image that is used to represent this entity within a list of entities.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='media.Media', verbose_name='Primary Image')),
                ('parent', models.ForeignKey(blank=True, help_text='Select the parent page for this page for the purpose of presenting multi-level navigation.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cms.Page', verbose_name='Parent Page')),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'ordering': ['seq', 'title'],
                'abstract': False,
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
            },
        ),
    ]
